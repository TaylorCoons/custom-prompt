name: CD

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.17

    - name: Build
      run: go build

    - name: Test
      run: go test -v ./...
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.17

    - name: Changelog
      id: changelog
      run: |
        echo "::set-output name=CHANGE_LOG::$(
          ./changelog.sh
        )" 

    - name: Package
      run: ./package_deb.sh
    - name: Get Package Name
      id: package_name
      run: |
        echo "::set-output name=PACKAGE_NAME::$(
          ./release_name.sh
        )"
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ steps.changelog.outputs.CHANGE_LOG }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./${{ steps.package_name.outputs.PACKAGE_NAME }}
        asset_name: ${{ steps.package_name.outputs.PACKAGE_NAME }}
        asset_content_type: application/deb

    # - name: Packagename
    #   id: packagename
    #   run: |
    #     echo "::set-output name=PACKAGE_NAME::$(
    #       ./release_name.sh
    #     )"
    # - name: Upload binaries to release
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: ${{ steps.packagename.outputs.PACKAGE_NAME }}
    #     asset_name: custom-prompt
    #     tag: ${{ github.ref }}
    #     overwrite: true
    #     body: ${{ steps.changelog.outputs.CHANGE_LOG }}